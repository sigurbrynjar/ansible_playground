#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/apache

- name: Install curl
  ansible.builtin.package:
    name: curl
    state: present

- name: Install Install Apache (Debian/RHEL)
  ansible.builtin.package:
    name: "{{ apache_package_name }}"
    state: present
    # update_cache: "{{ apache_update_cache }}"  # This variable is defined in roles/apache/defaults/main.yml

- name: Ensure Apache config directory exists
  ansible.builtin.file:
    path: "{{ apache_config_path | dirname }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Copy Apache Configuration File
  ansible.builtin.template:
    src: apache2.conf.j2
    dest: "{{ apache_config_path }}"
    owner: root
    group: root
    mode: "0644"
  notify: Restart Apache

- name: Ensure DocumentRoot exists
  ansible.builtin.file:
    path: "{{ apache_doc_root }}"  # This variable is defined in roles/apache/vars/main.yml
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "0755"

- name: Enable and Start Apache
  ansible.builtin.service:             # This module registers and starts a service (Apache2 HTTP server), 
    name: "{{ apache_package_name }}"  # verify inside container with `curl -I http://localhost` or `service apache2 status`
    state: started                     # Or run `docker exec -it web1 curl http://localhost` on host machine.
    enabled: yes

- name: Deploy VirtualHost configuration
  ansible.builtin.template:
    src: vhost.conf.j2
    dest: "/etc/apache2/sites-available/{{ apache_server_name }}.conf"
    owner: root
    group: root
    mode: "0644"
  when: apache_vhost

- name: Enable VirtualHost
  ansible.builtin.command: "a2ensite {{ apache_server_name }}"
  notify: Restart Apache
  when: apache_vhost

...