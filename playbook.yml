---  # Indicates the start of a YAML document

# Run playbook with the following command:
# ansible-playbook -i inventory.ini playbook.yml

# Run playbook with tags:
# ansible-playbook -i inventory.ini playbook.yml --tags test

- name: Test Playbook
  hosts: node_servers
  # Become is a privilege escalation method, it allows you to execute commands as another user
  become: true  # We can use True, TRUE, yes, YES, but yamllint will complain
  roles:
    - { role: ansible_tutorial, tags: ["ansible_tutorial"] }


#########
# ROLES #
#########

# Roles are a way to organize tasks, handlers, variables, and other files 
# in a structured way.

# Roles are defined in the roles directory in the root of the playbook directory.
# Each role has its own directory with subdirectories for tasks, handlers, variables,
# templates, and other files.

# Roles are reusable and can be shared across playbooks. They make it easier to
# manage and maintain playbooks by breaking them down into smaller, more manageable
# parts.

# We can automatically generate a new role with the following command:
# ansible-galaxy init roles/<role_name>
# This will create a new role directory with the necessary subdirectories and files.

# This role installs and configures Apache2 on the webservers group of hosts.
- name: Configure Web Servers
  hosts: webservers
  become: yes
  roles:
    - { role: apache, tags: ["apache"] }
  # We can run only this role with the following command:
  # ansible-playbook -i inventory.ini playbook.yml --tags apache

...  # Indicates the end of a YAML document